using System;
using System.Diagnostics;
using System.IO;
using RepairTool.Core;

namespace RepairTool.Repairs.Activities.Malware
{
    public class Sophos
    {
        public static void WebCheckSophos()
        {
            var srcDir = EnvironmentVars.WINMAL + "sophos_virus_remover\\";
            var destDir = EnvironmentVars.WINMAL + "sophos_virus_remover\\config.xml";
            if (!NetworkCheck.CheckInternet())
            {
                using (StreamWriter w = File.AppendText(EnvironmentVars.SYSTEMLOGS))
                {
                    Logger.LogWarning("We don't have internet", w);
                }
                
                //No Internet, grab the offline config
                srcDir += "config_network_connected_no.xml";
                File.Copy(srcDir, destDir);
            }
            else
            {
                srcDir += "config_network_connected_yes.xml";
                File.Copy(srcDir, destDir);
            }
        }

        public static void RunScan()
        {
            var runFile = EnvironmentVars.WINMAL + "sophos_virus_remover\\svrtcli.exe";
            ProcessStartInfo vrt = new ProcessStartInfo();
            vrt.UseShellExecute = false;
            vrt.RedirectStandardOutput = true;
            vrt.Arguments = "-yes";
            vrt.FileName = runFile;
            vrt.WindowStyle = EnvironmentVars.processWindowHide;
            vrt.CreateNoWindow = EnvironmentVars.noConsoleWindow;

            using (Process proc = Process.Start(vrt))
            {
                proc.WaitForExit();
                System.Threading.Thread.Sleep(30000);
                var output = proc.StandardOutput.ReadToEnd();
                using (StreamWriter w = File.AppendText(EnvironmentVars.LOGFILE))
                {
                    Logger.LogInfo(output, w);
                }
            }
        }

        public static void Cleanup()
        {
            var srcFile = Environment.GetFolderPath(Environment.SpecialFolder.CommonPrograms) +
                         "\\Sophos\\Sophos Virus Removal Tool\\logs\\SophosVirusRemovalTool.log";
            var destDir = EnvironmentVars.RAWLOGDIR + "Sophos\\VRT.log";
            var configFile = EnvironmentVars.WINMAL + "sophos_virus_remover\\config.xml";
            File.Copy(srcFile, destDir);
            File.Delete(srcFile);
            File.Delete(configFile);
            
            var runFile = EnvironmentVars.WINDIR + "system32\\cmd.exe";
            ProcessStartInfo vrt = new ProcessStartInfo();
            vrt.UseShellExecute = false;
            vrt.RedirectStandardOutput = true;
            vrt.Arguments = "sc delete SophosVirusRemovalTool";
            vrt.FileName = runFile;
            vrt.WindowStyle = EnvironmentVars.processWindowHide;
            vrt.CreateNoWindow = EnvironmentVars.noConsoleWindow;

            using (Process proc = Process.Start(vrt))
            {
                proc.WaitForExit();
                System.Threading.Thread.Sleep(30000);
                var output = proc.StandardOutput.ReadToEnd();
                using (StreamWriter w = File.AppendText(EnvironmentVars.LOGFILE))
                {
                    Logger.LogInfo(output, w);
                }
            }

            var regFile = EnvironmentVars.REG;
            ProcessStartInfo reg = new ProcessStartInfo();
            reg.UseShellExecute = false;
            reg.Arguments = "delete HKLM\\SYSTEM\\CurrentControlSet\\Services\\SophosVirusRemovalTool /f";
            reg.FileName = regFile;
            reg.WindowStyle = EnvironmentVars.processWindowHide;
            reg.CreateNoWindow = EnvironmentVars.noConsoleWindow;

            using (Process proc = Process.Start(reg))
            {
                proc.WaitForExit();
                System.Threading.Thread.Sleep(30000);
                var output = proc.StandardOutput.ReadToEnd();
                using (StreamWriter w = File.AppendText(EnvironmentVars.LOGFILE))
                {
                    Logger.LogInfo(output, w);
                }
            }
            
            using (StreamWriter w = File.AppendText(EnvironmentVars.LOGFILE))
            {
                Logger.LogInfo("SVRT completed...", w);
            }
        }
    }
}